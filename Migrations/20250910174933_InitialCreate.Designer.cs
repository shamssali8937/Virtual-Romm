// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using vrwebapi.Data;

#nullable disable

namespace vrwebapi.Migrations
{
    [DbContext(typeof(vrdbcontext))]
    [Migration("20250910174933_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("vrwebapi.Models.Assignment", b =>
                {
                    b.Property<int>("aid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aid"));

                    b.Property<string>("aname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("classid")
                        .HasColumnType("int");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<string>("dated")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("duedate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("time")
                        .HasColumnType("time");

                    b.HasKey("aid");

                    b.HasIndex("classid");

                    b.HasIndex("courseid");

                    b.ToTable("assignments");
                });

            modelBuilder.Entity("vrwebapi.Models.Classes", b =>
                {
                    b.Property<int>("classid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classid"));

                    b.Property<string>("classname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("classid");

                    b.HasIndex("courseid");

                    b.ToTable("classes");
                });

            modelBuilder.Entity("vrwebapi.Models.Course", b =>
                {
                    b.Property<int>("courseid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseid"));

                    b.Property<string>("coursename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseid");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("vrwebapi.Models.Enrollments", b =>
                {
                    b.Property<int>("enrollmentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("enrollmentid"));

                    b.Property<int>("classid")
                        .HasColumnType("int");

                    b.Property<int>("courseid")
                        .HasColumnType("int");

                    b.Property<int>("studentid")
                        .HasColumnType("int");

                    b.HasKey("enrollmentid");

                    b.HasIndex("classid");

                    b.HasIndex("courseid");

                    b.HasIndex("studentid");

                    b.ToTable("enrollments");
                });

            modelBuilder.Entity("vrwebapi.Models.Grades", b =>
                {
                    b.Property<int>("gid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("gid"));

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("grades")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sid")
                        .HasColumnType("int");

                    b.HasKey("gid");

                    b.HasIndex("sid");

                    b.ToTable("grades");
                });

            modelBuilder.Entity("vrwebapi.Models.Student", b =>
                {
                    b.Property<int>("studentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentid"));

                    b.Property<float>("cgpa")
                        .HasColumnType("real");

                    b.Property<string>("program")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rollno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("studentid");

                    b.HasIndex("userid");

                    b.ToTable("students");
                });

            modelBuilder.Entity("vrwebapi.Models.Submission", b =>
                {
                    b.Property<int>("sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("sid"));

                    b.Property<int>("aid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("file")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("issubmit")
                        .HasColumnType("bit");

                    b.Property<int>("studentid")
                        .HasColumnType("int");

                    b.HasKey("sid");

                    b.HasIndex("aid");

                    b.HasIndex("studentid");

                    b.ToTable("submissions");
                });

            modelBuilder.Entity("vrwebapi.Models.Teacher", b =>
                {
                    b.Property<int>("teacherid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teacherid"));

                    b.Property<string>("department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("teacherid");

                    b.HasIndex("userid");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("vrwebapi.Models.Teacherassigned", b =>
                {
                    b.Property<int>("tsid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tsid"));

                    b.Property<int>("classid")
                        .HasColumnType("int");

                    b.Property<int>("teacherid")
                        .HasColumnType("int");

                    b.HasKey("tsid");

                    b.HasIndex("classid");

                    b.HasIndex("teacherid");

                    b.ToTable("teacherassigneds");
                });

            modelBuilder.Entity("vrwebapi.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userid"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("vrwebapi.Models.Assignment", b =>
                {
                    b.HasOne("vrwebapi.Models.Classes", "Classes")
                        .WithMany()
                        .HasForeignKey("classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vrwebapi.Models.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classes");

                    b.Navigation("course");
                });

            modelBuilder.Entity("vrwebapi.Models.Classes", b =>
                {
                    b.HasOne("vrwebapi.Models.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");
                });

            modelBuilder.Entity("vrwebapi.Models.Enrollments", b =>
                {
                    b.HasOne("vrwebapi.Models.Classes", "classes")
                        .WithMany()
                        .HasForeignKey("classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vrwebapi.Models.Course", "course")
                        .WithMany()
                        .HasForeignKey("courseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vrwebapi.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classes");

                    b.Navigation("course");

                    b.Navigation("student");
                });

            modelBuilder.Entity("vrwebapi.Models.Grades", b =>
                {
                    b.HasOne("vrwebapi.Models.Submission", "submission")
                        .WithMany()
                        .HasForeignKey("sid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("submission");
                });

            modelBuilder.Entity("vrwebapi.Models.Student", b =>
                {
                    b.HasOne("vrwebapi.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("vrwebapi.Models.Submission", b =>
                {
                    b.HasOne("vrwebapi.Models.Assignment", "assignment")
                        .WithMany()
                        .HasForeignKey("aid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vrwebapi.Models.Student", "student")
                        .WithMany()
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("assignment");

                    b.Navigation("student");
                });

            modelBuilder.Entity("vrwebapi.Models.Teacher", b =>
                {
                    b.HasOne("vrwebapi.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("vrwebapi.Models.Teacherassigned", b =>
                {
                    b.HasOne("vrwebapi.Models.Classes", "classes")
                        .WithMany()
                        .HasForeignKey("classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("vrwebapi.Models.Teacher", "teacher")
                        .WithMany()
                        .HasForeignKey("teacherid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("classes");

                    b.Navigation("teacher");
                });
#pragma warning restore 612, 618
        }
    }
}
